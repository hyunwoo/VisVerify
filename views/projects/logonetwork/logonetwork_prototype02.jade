//
   Created by hyunwoo on 2015-04-26.
extends ../../projects_layout
block body
    head
        // START SIGMA IMPORTS
        script(src='../sigmajs/core/sigma.core.js')
        script(src='../sigmajs/core/conrad.js')
        script(src='../sigmajs/core/utils/sigma.utils.js')
        script(src='../sigmajs/core/utils/sigma.polyfills.js')
        script(src='../sigmajs/core/sigma.settings.js')
        script(src='../sigmajs/core/classes/sigma.classes.dispatcher.js')
        script(src='../sigmajs/core/classes/sigma.classes.configurable.js')
        script(src='../sigmajs/core/classes/sigma.classes.graph.js')
        script(src='../sigmajs/core/classes/sigma.classes.camera.js')
        script(src='../sigmajs/core/classes/sigma.classes.quad.js')
        script(src='../sigmajs/core/classes/sigma.classes.edgequad.js')
        script(src='../sigmajs/core/captors/sigma.captors.mouse.js')
        script(src='../sigmajs/core/captors/sigma.captors.touch.js')
        script(src='../sigmajs/core/renderers/sigma.renderers.canvas.js')
        script(src='../sigmajs/core/renderers/sigma.renderers.webgl.js')
        script(src='../sigmajs/core/renderers/sigma.renderers.svg.js')
        script(src='../sigmajs/core/renderers/sigma.renderers.def.js')
        script(src='../sigmajs/core/renderers/webgl/sigma.webgl.nodes.def.js')
        script(src='../sigmajs/core/renderers/webgl/sigma.webgl.nodes.fast.js')
        script(src='../sigmajs/core/renderers/webgl/sigma.webgl.edges.def.js')
        script(src='../sigmajs/core/renderers/webgl/sigma.webgl.edges.fast.js')
        script(src='../sigmajs/core/renderers/webgl/sigma.webgl.edges.arrow.js')
        script(src='../sigmajs/core/renderers/canvas/sigma.canvas.labels.def.js')
        script(src='../sigmajs/core/renderers/canvas/sigma.canvas.hovers.def.js')
        script(src='../sigmajs/core/renderers/canvas/sigma.canvas.nodes.def.js')
        script(src='../sigmajs/core/renderers/canvas/sigma.canvas.edges.def.js')
        script(src='../sigmajs/core/renderers/canvas/sigma.canvas.edges.curve.js')
        script(src='../sigmajs/core/renderers/canvas/sigma.canvas.edges.arrow.js')
        script(src='../sigmajs/core/renderers/canvas/sigma.canvas.edges.curvedArrow.js')
        script(src='../sigmajs/core/renderers/canvas/sigma.canvas.edgehovers.def.js')
        script(src='../sigmajs/core/renderers/canvas/sigma.canvas.edgehovers.curve.js')
        script(src='../sigmajs/core/renderers/canvas/sigma.canvas.edgehovers.arrow.js')
        script(src='../sigmajs/core/renderers/canvas/sigma.canvas.edgehovers.curvedArrow.js')
        script(src='../sigmajs/core/renderers/canvas/sigma.canvas.extremities.def.js')
        script(src='../sigmajs/core/renderers/svg/sigma.svg.utils.js')
        script(src='../sigmajs/core/renderers/svg/sigma.svg.nodes.def.js')
        script(src='../sigmajs/core/renderers/svg/sigma.svg.edges.def.js')
        script(src='../sigmajs/core/renderers/svg/sigma.svg.edges.curve.js')
        script(src='../sigmajs/core/renderers/svg/sigma.svg.labels.def.js')
        script(src='../sigmajs/core/renderers/svg/sigma.svg.hovers.def.js')
        script(src='../sigmajs/core/middlewares/sigma.middlewares.rescale.js')
        script(src='../sigmajs/core/middlewares/sigma.middlewares.copy.js')
        script(src='../sigmajs/core/misc/sigma.misc.animation.js')
        script(src='../sigmajs/core/misc/sigma.misc.bindEvents.js')
        script(src='../sigmajs/core/misc/sigma.misc.bindDOMEvents.js')
        script(src='../sigmajs/core/misc/sigma.misc.drawHovers.js')
        // END SIGMA IMPORTS
        script(src='../sigmajs/plugins/sigma.plugins.neighborhoods/sigma.plugins.neighborhoods.js')
        script(src='../sigmajs/plugins/sigma.layout.forceAtlas2/supervisor.js')
        script(src='../sigmajs/plugins/sigma.layout.forceAtlas2/worker.js')
        script(src='http://code.jquery.com/jquery-2.1.1.min.js')

    body
        h2
            div.container-fluid
                a #
                | Connect Link Prototype

        div.container-fluid
            style.
                #graph-container {
                    background-color: #dddddd;
                }

                .sigma-edge {
                    stroke: #14191C;
                }

                .sigma-node {
                    fill: #acbb03;
                    stroke: #14191C;
                    stroke-width: 2px;
                }

                .sigma-node:hover {
                    fill: blue;
                }

                .muted {
                    fill-opacity: 0.1;
                    stroke-opacity: 0.1;
                }
            div(id='graph-container',style='margin:0;width:100%; height:500px; border:1px solid')
            legend
            h4
                a #Data :
                |  JSON Data
            textarea(id='text',style='resize:none; width:100%; border:1px solid') #{default_data}
        script.
            // TextArea Reformat
            var G_DATA = document.getElementById("text").value;
            var myTextArea = document.getElementById("text");
            var myCodeMirror = CodeMirror(function (elt) {
                        console.log(elt);
                        myTextArea.parentNode.replaceChild(elt, myTextArea);
                    },
                    {
                        value: myTextArea.value,
                        lineNumbers: true,
                        lineWrapping: true,
                        theme: '3024-day',
                    }
            );
            //End
            var i,
                    s,
                    N = 100,
                    E = 500,
                    g = {
                        nodes: [],
                        edges: []
                    };
            // Generate a random graph:
            for (i = 0; i < N; i++)
                g.nodes.push({
                    id: 'n' + i,
                    label: 'Node ' + i,
                    x: Math.random(),
                    y: Math.random(),
                    size: Math.random(),
                    color: '#666'
                });
            for (i = 0; i < E; i++)
                g.edges.push({
                    id: 'e' + i,
                    source: 'n' + (Math.random() * N | 0),
                    target: 'n' + (Math.random() * N | 0),
                    size: Math.random(),
                    color: '#ccc'
                });
            var g = JSON.parse(G_DATA);
            // Instantiate sigma:
            s = new sigma({
                graph: g,
                settings: {
                    enableHovering: false
                }
            });
            s.addRenderer({
                id: 'main',
                type: 'svg',
                container: document.getElementById('graph-container'),
                freeStyle: true
            });
            s.refresh();
            // Binding silly interactions
            function mute(node) {
                if (!~node.getAttribute('class').search(/muted/))
                    node.setAttributeNS(null, 'class', node.getAttribute('class') + ' muted');
            }
            function unmute(node) {
                node.setAttributeNS(null, 'class', node.getAttribute('class').replace(/(\s|^)muted(\s|$)/g, '$2'));

            }
            $('.sigma-node').click(function () {
                // Muting
                $('.sigma-node, .sigma-edge').each(function () {
                    mute(this);
                });
                // Unmuting neighbors
                var neighbors = s.graph.neighborhood($(this).attr('data-node-id'));
                neighbors.nodes.forEach(function (node) {
                    unmute($('[data-node-id="' + node.id + '"]')[0]);
                });
                neighbors.edges.forEach(function (edge) {
                    unmute($('[data-edge-id="' + edge.id + '"]')[0]);
                });
            });
            s.bind('clickStage', function () {
                $('.sigma-node, .sigma-edge').each(function () {
                    unmute(this);
                });
            });
            s.startForceAtlas2();
