//
   Created by hyunwoo on 2015-04-27.
extends ../../projects_layout
block body
    div.container-fluid
        div
            h2(style='margin-top:0px')
                a #
                |  Annals of the Joseon Dynasty's Data
            legend
            h5
                div.row
                    div.col-lg-6
                        p
                        div.dropdown(align='right', style='margin-top:0px')
                            div.btn.btn-primary.dropdown-toggle(type='button',id='dropdowncountry',data-toggle='dropdown',aria-expanded=true ,style='width:100%;padding-right:3px', align='right')
                                div.row
                                    div.col-xs-8(align='left')
                                        span.badge(style='margin-left:10px') #{count}
                                        strong(style='margin-right:10px;padding-left:15px') #{select}
                                    div.col-xs-4(align='right')
                                        span.caret(style='margin-left:10px;margin-right:10px')
                            ul.dropdown-menu(role='menu', aria-labelledby='dropdowncountry',style='width:100%')
                                li.dropdown-header Kings
                                -for(var i = 0 ; i < kings.length ; i ++){
                                li(role='presentation')
                                    a(role='menuitem', tabindex='-1', href='../data?king=' + kings[i].name)
                                        div.row(style='margin-top:15px')
                                            div.col-sm-7
                                                p(style='margin-left:35px') #{kings[i].name}
                                            div.col-sm-5(align='right')
                                                span.badge(style='width:50px') #{kings[i].value}
                                -}

                    div.col-lg-6(align='right')
                        p
                        - if(pagecount > 1) {
                            ul.pagination(style='margin-top:0px;padding-top:0px')
                                li
                                    a(aria-label='Previous')
                                        span(aria-hidden='true') &laquo;
                                - var beforeCount = currentpage - 4 < 0 ? 0 : currentpage - 4;
                                -for(var i = beforeCount; i < beforeCount + 8; i ++){
                                -   if( i >= pagecount) break;
                                -   var page = i * 1;
                                -   if(page == (currentpage)){
                                li.active
                                    a(href='../data?king=' + select + '&page=' + page) #{page}
                                -   } else {
                                li
                                    a(href='../data?king=' + select + '&page=' + page) #{page}
                                -   }
                                -}
                                li
                                    a(aria-label='Previous')
                                        span(aria-hidden='true') &raquo;
                        - }
        div.alert.alert-warning(role="alert")
            span.glyphicon.glyphicon-info-sign
            span.sr-only Warning:
            strong WARNING!
            |  Page loading may be slower
        //div.progress
            div.class.progress-bar.progress-bar.progress-bar-info(role='progressbar', aria-valuenow='20', aria-valuemin='0', aria-valuemax='0',style='width:35%')
        div(id='chart', style='margin:0;width:100%; height:auto; border:1px solid')
        legend
    div.container-fluid
        textarea(id='text',style='display:none') #{twits}
        script.
            var G_DATA;
            $(function onLoad() {
                console.log("!");
                nv.addGraph(function () {
                    var chart = nv.models.indentedTree()
                            .tableClass('table table-striped') //for bootstrap styling
                            .columns([
                                {
                                    key: 'Date',
                                    label: 'Date',
                                    width: '15%',
                                    type: 'text'
                                },
                                {
                                    key: 'Sector',
                                    label: 'Sector',
                                    width: '15%',
                                    type: 'text'
                                },
                                {
                                    key: 'Text',
                                    label: 'Text',
                                    showCount: true,
                                    width: '70%',
                                    text: 'bold',
                                    type: 'text'
                                },

                            ]);
                    d3.select('#chart')
                            .datum(makeData())
                            .call(chart);
                    return chart;
                });
            })
            function makeData() {
                G_DATA = document.getElementById("text").value;
                return JSON.parse(G_DATA);
            }
