//
   Created by hyunwoo on 11/10/15.

extends ../../intro_layout
//<link href='https://fonts.googleapis.com/css?family=Poiret+One' rel='stylesheet' type='text/css'>
block body
    div.head
        div(align='center' , style='margin-left:20px')
            h4.fit.
                Cluster
            h5.fit
                c2.
                    Csv Data Cluster API
    div.container-fluid.content
        p
        div.center.c2.strike
            span
                h3
                    span.glyphicon.glyphicon-bookmark(style='font-size:17px')
                    | &nbsp;&nbsp;Overview
        .space
        div.row
            div.col-lg-4
                a.img-part.hvr-reveal(href='#', style='background-image: url("/img/apis/cluster/abstract.png");')
                    text.space.animated.wow.fadeIn
                        h4.fit.c5 Overview
                        h5.fit.c6 Download LDA Topic Modeling Document
            div.col-lg-8.img-content
                h4.light(style='line-height: 160%;font-size:15px').
                    본 API는 CSV포맷의 데이터를 클러스터링 합니다.<br>
                    3가지의 클러스터링 기법을 지원하며, 본 페이지에서는 클러스터의 결과를 Scatterplot형태로 확인 할 수 있습니다.
                p
                h4
                    div.strike.c4
                        span Description
                div.row
                    div.col-lg-6
                        h4.fit.light(style='line-height: 160%;font-size:15px').
                            <br><strong> 예제 사용방법 :</strong><br>
                            1. CSV데이터를 아래 Input 필드에 복사하여 붙혀 넣습니다.<br>
                            2. 클러스터링 기법과 세부 사항을 설정합니다.<br>
                            3. Cluster 버튼을 눌러 클러스터링을 진행합니다.<br>
                        h4.fit.light.c7(style='line-height: 160%;font-size:15px').
                            <br><strong> 주의사항 :</strong><br>
                            ㄴ 데이터는 반드시 아래 예시와 같아야합니다.<br>
                            ㄴ 1행은 데이터 인자의 이름이어야 합니다.<br>
                            ㄴ 1열은 데이터의 이름이어야 합니다.<br>
                    div.col-lg-6
                        h4.fit.light(style='line-height: 160%;font-size:15px').
                            <br><strong> API : </strong><br>
                            HTTP TYPE : POST<br>
                            1. KMeans : /apis/cluster/KMeans<br>
                            &nbsp;&nbsp;&nbsp;-    Parameter : meanCount(int), meanIter(int)<br>
                            2. DBScan : /apis/cluster/DBScan<br>
                            &nbsp;&nbsp;&nbsp;-    Parameter : radius(float), points(int)<br>
                            3. Optics : /apis/cluster/Optics<br>
                            &nbsp;&nbsp;&nbsp;-    Parameter : radius(float), points(int)<br>

                p
                h5.
                    Input Parameter에 대한 자세한 설명과 Return Value는 아래 예제를 통해 확인 가능합니다.

        p.double
        div.center.c4.strike
            span
                h3
                    span.glyphicon.glyphicon-play-circle(style='font-size:17px')
                    | &nbsp;&nbsp;Input Data (CSV File Format)
        .space

        div
            div.row
                div.col-sm-4(style='text-align:center')
                    .radio.radio-primary
                        input#radio3(type='radio', name='radio1', value='option1', onclick='onClickKMeans()')
                        label(for='radio3')
                            h3.light(style='margin-top:-7px') K-Means
                div.col-sm-4(style='text-align:center')
                    .radio.radio-primary
                        input#radio4(type='radio', name='radio1', value='option1', onclick='onClickDBScan()')
                        label(for='radio4')
                            h3.light(style='margin-top:-7px') DBScan
                div.col-sm-4(style='text-align:center')
                    .radio.radio-primary
                        input#radio5(type='radio', name='radio1', value='option1', onclick='onClickOptics()')
                        label(for='radio5')
                            h3.light(style='margin-top:-7px') Optics
            div.row
                div.col-sm-9
                    div#divKmeans(style='display: inline;')
                        div.row
                            div.col-sm-6
                                h4.light.fit(style='margin-bottom:5px') : Means Count
                                    input#KMeansMeansCount(placehorder="4",style='width:100%; height : 30px; padding-left:10px;', type="number")
                                h5.light(style='margin-top:-3px') number of clusters we want to cluster our data into
                            div.col-sm-6
                                h4.light.fit(style='margin-bottom:5px') : Iteration Count
                                    input#KMeansIterCount(placehorder="4",style='width:100%; height : 30px; padding-left:10px;', type="number")
                                h5.light(style='margin-top:-3px') number of iterations we want our k-means to run

                    div#divDBScan(style='display: none;')
                        div.row
                            div.col-sm-6
                                h4.light.fit(style='margin-bottom:5px') : Radius
                                    input#DBScanRadius(placehorder="4",style='width:100%; height : 30px; padding-left:10px;', type="number")
                                h5.light(style='margin-top:-3px') neighborhood radius
                            div.col-sm-6
                                h4.light.fit(style='margin-bottom:5px') : Number of point in neighborhood
                                    input#DBScanPoints(placehorder="4",style='width:100%; height : 30px; padding-left:10px;', type="number")
                                h5.light(style='margin-top:-3px') number of points in neighborhood to form a cluster
                    div#divOptics(style='display: none;')
                        div.row
                            div.col-sm-6
                                h4.light.fit(style='margin-bottom:5px') : Radius
                                    input#OpticsRadius(placehorder="4",style='width:100%; height : 30px; padding-left:10px;', type="number")
                                h5.light(style='margin-top:-3px') neighborhood radius
                            div.col-sm-6
                                h4.light.fit(style='margin-bottom:5px') : Number of point in neighborhood
                                    input#OpticsPoints(placehorder="4",style='width:100%; height : 30px; padding-left:10px;', type="number")
                                h5.light(style='margin-top:-3px') number of points in neighborhood to form a cluster
                div.col-sm-3
                    button.btn.btn-success(style='width:100%; height:50px; margin-top:25px', onclick='onCluster()')
                        h3.fit Cluster
        div
            p.double
            h4.light
                textarea#TextInput(style='width:100%; height:250px; padding-left : 10px', align='center')
                p.double
                div.center.c4.strike
                span
                h3.c4.fit(style='margin-left:15px')
                    span.glyphicon.glyphicon-erase(style='font-size:17px')
                    | &nbsp;&nbsp;Clustering Result
                h5.fit.light.c4.
                    &nbsp;&nbsp;&nbsp;&nbsp;* 아래 Scatterplot는 2차원 좌표에 대하여 (1,2번째 Element) 표기 한 것입니다.
        div#result(style='margin:15px; ')
            div.row
                div.col-lg-9
                    h4.light Visualization :
                    div#renderer.border(style='width:100%;height:650px;')
                div.col-lg-3
                    h4.light Result Json :
                    pre(style='height:650px')
                        h5.light#JSONOutput
                p
    script(src='/js/apis/cluster/cluster_main.js')
